package com.spring.demo.dto;

import java.math.BigDecimal;

import com.spring.demo.model.Article;
import com.spring.demo.model.CommandeFournisseur;
import com.spring.demo.model.LigneCommandeFournisseur;
import lombok.Builder;
import lombok.Data;

@Data
@Builder
public class LigneCommandeFournisseurDto {

	private Integer id;
	private Article article;
	private CommandeFournisseur commandeFournisseur;
	private BigDecimal quantite;
	private BigDecimal prixUnitaire;
	
	public LigneCommandeFournisseurDto fromEntity(LigneCommandeFournisseur ligneCommandeFournisseur) {
		if (ligneCommandeFournisseur == null)
			return null;
		return LigneCommandeFournisseurDto.builder()
				.id(ligneCommandeFournisseur.getId())
				.article(ligneCommandeFournisseur.getArticle())
				.commandeFournisseur(ligneCommandeFournisseur.getCommandeFournisseur())
				.quantite(ligneCommandeFournisseur.getQuantite())
				.prixUnitaire(ligneCommandeFournisseur.getPrixUnitaire())
				.build();
	}
	public LigneCommandeFournisseur toEntity(LigneCommandeFournisseurDto ligneCommandeFournisseurDto) {
		if (ligneCommandeFournisseurDto == null)
			return null;
		LigneCommandeFournisseur ligneCommandeFournisseur = new LigneCommandeFournisseur();
		ligneCommandeFournisseur.setId(ligneCommandeFournisseurDto.getId());
		ligneCommandeFournisseur.setArticle(ligneCommandeFournisseurDto.getArticle());
		ligneCommandeFournisseur.setCommandeFournisseur(ligneCommandeFournisseurDto.getCommandeFournisseur());
		ligneCommandeFournisseur.setQuantite(ligneCommandeFournisseurDto.getQuantite());
		ligneCommandeFournisseur.setPrixUnitaire(ligneCommandeFournisseurDto.getPrixUnitaire());
		return ligneCommandeFournisseur;
	}

}
